<?xml version="1.0" encoding="UTF-8"?>

<project name="Axstrad\Axstrad" default="build">
    <property name="dir.build" value="${basedir}/build" />
    <property name="dir.build.api" value="${dir.build}/api" />
    <property name="dir.build.phpdoc" value="${dir.build}/phpdoc" />
    <property name="dir.build.codebrowser" value="${dir.build}/code-browser" />
    <property name="dir.build.coverage" value="${dir.build}/coverage" />
    <property name="dir.build.logs" value="${dir.build}/logs" />
    <property name="dir.build.phpdepend" value="${dir.build}/pdepend" />
    <property name="dir.src" value="${basedir}/." />
    <property name="dir.tests" value="${dir.src}/*/Tests" />
    <property name="dir.vendor" value="${basedir}/vendor" />

    <target name="build"
            depends="composer,prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdoc,phpunit,phpcb"
    />

    <target name="build-parallel"
            depends="composer,prepare,lint,tools-parallel,phpunit,phpcb"
    />

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
        </parallel>
    </target>

    <target name="composer" description="Installing dependencies">
        <exec executable="curl">
            <arg value="-O" />
            <arg value="http://getcomposer.org/composer.phar" />
        </exec>
        <exec executable="php">
            <arg value="composer.phar" />
            <arg value="install" />
            <arg value="--prefer-dist" />
        </exec>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${dir.build.api}"/>
        <delete dir="${dir.build.phpdoc}"/>
        <delete dir="${dir.build.codebrowser}"/>
        <delete dir="${dir.build.coverage}"/>
        <delete dir="${dir.build.logs}"/>
        <delete dir="${dir.build.phpdepend}"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${dir.build.api}"/>
        <mkdir dir="${dir.build.phpdoc}"/>
        <mkdir dir="${dir.build.codebrowser}/"/>
        <mkdir dir="${dir.build.coverage}"/>
        <mkdir dir="${dir.build.logs}"/>
        <mkdir dir="${dir.build.phpdepend}"/>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l" />
            <fileset dir="${dir.src}">
                <include name="**/*.php" />
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${dir.build.logs}/phploc.csv" />
            <arg value="--exclude=${dir.build}" />
            <arg value="--exclude=${dir.tests}" />
            <arg value="--exclude=${dir.vendor}" />
            <arg path="${dir.src}" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${dir.build.logs}/jdepend.xml" />
            <arg value="--jdepend-chart=${dir.build.phpdepend}/dependencies.svg" />
            <arg value="--overview-pyramid=${dir.build.phpdepend}/overview-pyramid.svg" />
            <arg value="--ignore=${dir.build},${dir.tests},${dir.vendor}" />
            <arg path="${dir.src}" />
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${dir.src}" />
            <arg value="text" />
            <arg value="${dir.build}/phpmd.xml" />
            <arg value="--exclude" />
            <arg value="{$dir.build},${dir.tests},${dir.vendor}" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${dir.src}" />
            <arg value="xml" />
            <arg value="${dir.build}/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${dir.build.logs}/pmd.xml" />
            <arg value="--exclude" />
            <arg value="vendor,Tests,build" />
        </exec>
    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=${dir.build}/phpcs.xml" />
            <arg value="--ignore=${dir.build},${dir.tests},${dir.vendor}" />
            <arg path="${dir.src}" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${dir.build.logs}/checkstyle.xml" />
            <arg value="--standard=${dir.build}/phpcs.xml" />
            <arg value="--ignore=${dir.vendor}" />
            <arg value="--ignore=${dir.tests}" />
            <arg path="${dir.src}" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${dir.build.logs}/pmd-cpd.xml" />
            <arg value="--exclude" />
            <arg value="build" />
            <arg value="--exclude" />
            <arg value="Tests" />
            <arg value="--exclude" />
            <arg value="vendor" />
            <arg path="${dir.src}" />
        </exec>
    </target>

    <target name="phpdoc" description="Generate API documentation using PhpDocumentor 2">
        <exec executable="phpdoc"/>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit" failonerror="true"/>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${dir.build.logs}" />
            <arg value="--output" />
            <arg path="${dir.build.codebrowser}" />
        </exec>
    </target>
</project>
